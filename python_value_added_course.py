# -*- coding: utf-8 -*-
"""python value added course

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16KMM0l3dxq7xHuIguAQaj5heZfRFDAaU
"""

import numpy as np
arr=np.array([[1,2,3],[3,4,5],[5,6,7]])
print(arr)
print(type(arr))

#checking no of dimensions in the attribute
import numpy as np
arr=np.array([6,7,8],ndmin=5)
print(arr)
print(arr.ndim)

#Array indexing
#staarts 0
#n-1
import numpy as np
arr=[2,34,4,5]
for i in range(len(arr)):
   print(arr)

import numpy as np
a=np.array([59,89,67,90,95])
s=0
for i in a:
  s=s+i
print(s)
avg=s/len(a)
print(avg)

import numpy as np
a=np.array([59,89,67,90,95])
for i in range(len(a)-1,-1,-1):
  print(a[i])

#finding max and min element in the number
import numpy as np
a=np.array([59,89,55,25,95])
max=min=a[0]
for i in a:
  if i>max:
    max=i
  if i<min:
    min=i
print(max)
print(min)

import numpy as np
a=np.array([[2,4,6],[4,5,6],[7,8,9]])
print("the given matrix is:")
for i in range(len(a)):
    for j in range(len(a[i])):
        print(a[i,j],end=' ')
    print()
for i in a:
    print(a)

import numpy as np
a=np.array([[2,4,6],[4,5,6],[7,8,9]])
print("the given matrix is:")
for i in a:
    for j in i:
        print(j,end=' ')
    print()
for i in a:
    print(a)

#3 dimensional

import numpy as np

a = np.array([[[1,2,3],[4,5,6],[7,8,9]],[[10,11,12],[13,14,15],[16,17,18]]])
for i in a:
  for j in i:
    for k in j:
      print(k,end=' ')
    print()
for i in a:
  print(a)

import numpy as np
a = np.array([1,2,3])

for i in range(-len(a),0):
  print(a[i])

import numpy as np
a=np.array([3,4,5])
n=a[::-1]
print(n)

import numpy as np
a=np.array([1,2,3,4,5,6,7,8,9,10])
print(a[1::2])

#numpy random
from numpy import random
x=random.randint(50)
print(x)

from numpy import random
x=random.rand()
print(x)

from numpy import random
x=random.randint(50,size=(3,3))
print(x)

from numpy import random
x=random.rand(10)
print(x)

from numpy import random
x=random.choice([5,8,12,9,0],size=(3,3))
print(x)

from numpy import random
x=random.choice([4,5,66,7,7,888])
print(x)

#SHUFFLE
from numpy import random
import numpy as np
a=np.array([1,2,33,4,55])
random.shuffle(a)
print(a)

from numpy import random
import numpy as np
a=np.array([1,23,3,3,4])
b=random.permutation(a)
print(a)
print(b)

import numpy as np
arr=np.array([[1,2,3],[4,5,6],[6,7,7]])
print(arr)
print(type(arr))

#checking no of dimensions
import numpy as np
arr1=np.array(5)
arr2=np.array([2,3,4,4])
print(arr2)
print(arr2.ndim)

#specifications of no of dimensions
import numpy as np
arr1=np.array(5)
arr2=np.array([2,3,4,4],ndmin=5)
print(arr2)
print(arr2.ndim)

#array indexing

#finding the avg

import numpy as np
a=np.array([1,2,33,4,5])
s=0
for i in a:
  s=s+i
print(s)
avg=s/len(a)
print(avg)

#minus indexing

import numpy as np
a=np.array([1,2,3,4,5,6])
for i in range(len(a)-1,-1,-1):
  print(a[i])

#find min max in the array
import numpy as np
a=np.array([1,2,3,4,5,6])
max=min=a[0]
for i in a:
  if i>max:
    max=i
  if i<min:
    min=i
print(max)
print(min)

import numpy as np
a=np.array([1,2,3],dtype='i4')
print(a)
print(a.dtype)

import numpy as np
a=np.array([1,2,3])
print(a)
print(a.dtype)

import numpy as np
a=np.array([1,2,3],dtype='S')
print(a)
print(a.dtype)

#conversion of one data type to another data type
import numpy as np
a=np.array([1.1,2.2,3.3,4.4])
b=a.astype('i')
print(a)
print(a.dtype)
print(b)
print(b.dtype)

import numpy as np
a=np.array([1.1,2.2,3.3,4.4])
b=a.astype('bool')
print(a)
print(a.dtype)
print(b)
print(b.dtype)

import numpy as np
a=np.array([1.1,2.2,3.3,0])
b=a.astype(bool)
print(a)
print(a.dtype)
print(b)
print(b.dtype)

import numpy as np
a=np.array([1,-2,0])
b=a.copy()
print(a)
print(b)
a[0]=6
print(a)
print(b)
b[0]=9
print(a)
print(b)

import numpy as np
a=np.array([1,-2,0])
b=a.view()
print(a)
print(b)
a[0]=6
print(a)
print(b)
b[0]=9
print(a)
print(b)

import numpy as np
a=np.array([1,2,3])
print(a.shape)

import numpy as np
a=np.array([[1,2,3],[4,5,6],[7,8,8]])
print(a.shape)

import numpy as np
a=np.array([1,2,3],ndmin=5)
print(a)
print(a.shape)

#changing from one dim to another (multi) dim
import numpy as np
a=np.array([1,2,3,4,5,6,7,8,9])
b=a.reshape(3,3)
print(a)
print(b)
#cant change the dimensions such as (2,5)(4,5)

#changing from multi dim to single dimensions
import numpy as np
a=np.array([[1,2,3],[4,5,6],[7,8,9]])
b=a.reshape(-1)
print(a)
print(b)

import numpy as np
a=np.array([[1,2,3],[4,5,6],[7,8,9]])
for x in np.nditer(a):
  print(x)

import numpy as np
a=np.array([[1,2,3],[4,5,6],[7,8,9]])
for x in np.nditer(a[:,::2]):
  print(x)

#enumerated iteration using ndenumeration
import numpy as np
a=np.array([1,2,3,4,5])
b=np.array([[[1,2,3,4],[5,6,7,8]]])
print(b)
for i,x in np.ndenumerate(a):
  print(i,x)
for i,x in np.ndenumerate(b):
  print(i,x)

#DISTRIBUTION
#1.NORMAL DISTRIBUTION

import matplotlib.pyplot as plt
import seaborn as sb
import numpy as np
from numpy import random
x=random.normal(loc=10,scale=5,size=500)
sb.distplot(x,hist=False)
plt.show()

import matplotlib.pyplot as plt
import seaborn as sb
sb.displot([10,20,30,40])
plt.show()

#2.BINOMIAL DISTRIBUTION
from numpy import random
a=random.binomial(n=10,p=0.3,size=10)
print(a)

#Binomial distribution

import seaborn as sb
import matplotlib.pyplot as plt
from numpy import random
a=random.binomial(n=10,p=0.5,size=1000)
sb.displot(a,kde=False)
plt.show()

#random values are generated in such a way that the occurance of the values are shown in the garph

#3.POISSON DISTRIBUTION

from numpy import random
import seaborn as sb
a=random.poisson(lam=3,size=100)
print(a)

#POisson distribution
from numpy import random
import seaborn as sb
a=random.poisson(lam=3,size=200)
print(a)

from numpy import random
import seaborn as sb
import matplotlib.pyplot as plt
a=random.poisson(lam=3,size=1000)
sb.distplot(a,kde=False)
plt.show()

#4.UNIFORM DISTRIBUTION
from numpy import random
import seaborn as sb
import matplotlib.pyplot as plt
a=random.uniform(size=(3,3))
sb.distplot(a,hist=False)
plt.show()

#5.LOGISTIC DISTRIBUTION

from numpy import random
import seaborn as sb
import matplotlib.pyplot as plt
a=random.logistic(loc=1,scale=2,size=1000)
sb.distplot(a,hist=False)
plt.show()

from  numpy import random
a=random.logistic(loc=1,scale=2,size=1000)
print(a)

#6.MULTINOMIAL DISTRIBUTION
from numpy import random
a=random.multinomial(n=6,pvals=[1/6,1/6,1/6],size=10)
print(a)

from numpy import random
import seaborn as sb
import matplotlib.pyplot as plt
a=random.multinomial(n=6,pvals=[1/6,1/6,1/6,1/6,1/6,1/6],size=10)
sb.distplot(a)
plt.show()

#7.Exponential distribution

from numpy import random
import seaborn as sb
import matplotlib.pyplot as plt
a=random.exponential(size=1000)
sb.distplot(a,hist=False)
plt.show()

from numpy import random
a=random.exponential(size=10)
print(a)

#8.CHI SQUARE DISTRIBUTION

from numpy import random
import seaborn as sb
import matplotlib.pyplot as plt
a=random.chisquare(df=1,size=1000)
sb.distplot(a,hist=False)
plt.show()

from  numpy import random
a=random.chisquare(df=1,size=10)
print(a)

#9.PARETO DISTRIBUTION

from numpy import random
import seaborn as sb
import matplotlib.pyplot as plt
a=random.pareto(a=2,size=1000)
sb.distplot(a,kde=False)
plt.show()

from numpy import random
a=random.pareto(a=2,size=10)
print(a)

#MATRIX

import numpy as np
a=np.array([[2,4,6],[4,5,6],[7,8,9]])
print("the given matrix is:")
for i in range(len(a)):
    for j in range(len(a[i])):
        print(a[i,j],end=' ')
    print()
for i in a:
    print(a)

import numpy as np
a=np.array([[2,4,6],[4,5,6],[7,8,9]])
print("the given matrix is:")
for i in a:
    for j in i:
        print(j,end=' ')
    print()
for i in a:
    print(a)

import numpy as np
a=np.array([[2,4,6],[4,5,6],[7,8,9]])
print("the given matrix is:")
for i in range(len(a)):
    for j in range(len(a[i])):
        print(a[i,j],end=' ')
    print()
for i in a:
    print(a)

#SECOND LARGEST ELEMENT IN THE ARRAY
import numpy as np

a = np.array([59, 89, 55, 25, 95])
max_val = a[0]
max2 = 0

for i in range(1, len(a)):
    if a[i] > max_val:
        max2 = max_val
        max_val = a[i]

print("Maximum:", max_val)
print("Second maximum:", max2)

#PANDAS


import pandas as pd
ds=[29,90,87]
df=pd.Series(ds)
print(df)

import pandas as pd
ds=[90,95,89,65,88]
df=pd.Series(ds,index=['T','E','M','S','SS'])
print(df['M'])
import pandas as pd
ds={'T':90,'E':95,'M':89,'S':65,'SS':88}
df=pd.Series(ds)
print(df)

import pandas as pd
ds={'T':90,'E':95,'M':89,'S':65,'SS':88}
df=pd.Series(ds,index=['M','S'])
print(df)

import pandas as pd
ds={'names':['Tushar','Saran','Madhan','Sabari'],'marks':[95,89,93,98]}
df=pd.DataFrame(ds)
print(df)

import pandas as pd
ds={'Tam':[90,86,98,100,87],'Eng':[95,89,93,98,79],'Mat':[89,95,79,90,100]}
df=pd.DataFrame(ds,index=['Test1','Test2','Test3','Test4','Test5'])
print(df)

import pandas as pd
ds={'names':['Tushar','Saran','Madhan','Sabari'],'marks':[95,89,93,98]}
df=pd.DataFrame(ds)
print(df)
print(df.loc[1])
print(df.loc[[1,2]])

import pandas as pd
ds={'Tam':[90,86,98,100,87],'Eng':[95,89,93,98,79],'Mat':[89,95,79,90,100]}
df=pd.DataFrame(ds,index=['Test1','Test2','Test3','Test4','Test5'])
print(df.loc['Test2'])

import pandas as pd
df=pd.read_csv('/content/customers-100.csv')
print(df)

